name: Transfer project in
description: Transfer a project into Django commons with the following form.
labels: ["Transfer project in"]
title: "ðŸ›¬ [INBOUND] - <project>"
assignees: 'django-commons/admins'
body:
  - type: markdown
    attributes:
      value: |
        Thanks for expressing interesting in adding your project to Django Commons!

        Please review the [incoming repository requirements](https://github.com/django-commons/membership/blob/main/incoming_repo_requirements.md) before submitting your request.
  - type: input
    id: project-url
    attributes:
      label: What's the URL to the project?
      placeholder: "https://github.com/django-commons/django-commons-playground"
    validations:
      required: true
  - type: input
    id: current-maintainer
    attributes:
      label: Who are the current maintainers?
    validations:
      required: true
  - type: checkboxes
    id: transfer-checklist
    attributes:
      label: Does the project have the required attributes?
      description: "[Review the incoming repo requirements for details.](https://github.com/django-commons/membership/blob/main/incoming_repo_requirements.md)"
      options:
        - label: Are you a member of the Django Commons organization? (if not, [open an issue to add yourself as a member](https://github.com/django-commons/membership/issues/new?template=new-member.yml))
        - label: Does the project have tests?
        - label: Does the project have documentation?
        - label: Has the project adopted [Django Commons's Code of Conduct](https://github.com/django-commons/membership/blob/main/CODE_OF_CONDUCT.md)?
        - label: Do you have permissions to transfer the repository to the Django Commons organization?
        - label: Does the project use [readthedocs](https://readthedocs.org/) for documentation?
        - label: Has djangocommons@gmail.com been invited as a maintainer to the project readthedocs.
  - type: textarea
    id: new-maintainers
    attributes:
      label: Who will be the new maintainers of the project?
    validations:
      required: false
  - type: checkboxes
    id: options
    attributes:
      label: Do you use test PyPI or want to test the packaging process?
      description: "These are entirely up to you and can be changed at a later time."
      options:
        - label: Does the project have a test.pypi.org project?
        - label: Would you like to test your deployments with uploads to test.pypi.org (you'll need to create the project first)?
  - type: input
    id: javascript-package-url
    attributes:
      label: If the project has a JavaScript component published separately to a registry like NPM, what's the URL to that package?
      description: Most projects bundle their JavaScript together with the Python package on PyPI -- so this question likely does not apply to you in -- but some projects have a separate JavaScript package that is published to npm. If your project does this, please provide the URL. If not, you can leave this blank.
      placeholder: "https://www.npmjs.com/package/your-package-name"
    validations:
      required: false
  - type: markdown
    attributes:
      value: |
        Please copy and paste the following code block and edit it to meet your needs for the repository. You can post this as a comment in your issue or as a comment. We'll use this to create a PR to add the repository to the Django Commons organization.

        ```terraform
        "your-repo-here" = {
          description         = "Your project's description here"
          # Different merge strategies can be enabled/disabled
          allow_merge_commit  = true # Allow merge commits on pull requests
          allow_rebase_merge  = true # Allow rebase and merge commits on pull requests
          allow_squash_merge  = true # Allow squash and merge commits on pull requests - Recommended
          allow_update_branch = true # Allow updating source branch on pull requests
          
          has_discussions     = false # Enable discussions in project's repository
          has_wiki            = false # Enable wiki in project's repository
          admins = [
            # Include people who can release new versions
            "your-username-here",
          ]
          committers = [
            # Include people who can commit to main / merge changes
          ]
          members = [
            # Include people who can assign/triage tickets
          ]
        }
        ```

